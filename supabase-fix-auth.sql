-- Script de correction des probl√®mes d'authentification CalendrCar
-- √Ä ex√©cuter dans l'√©diteur SQL de Supabase

-- √âtape 1: V√©rifier et d√©sactiver RLS temporairement pour permettre l'acc√®s anonyme
BEGIN;

-- D√©sactiver RLS sur la table vehicles
ALTER TABLE vehicles DISABLE ROW LEVEL SECURITY;

-- D√©sactiver RLS sur la table reservations
ALTER TABLE reservations DISABLE ROW LEVEL SECURITY;

-- Ou alternative: cr√©er des politiques qui permettent l'acc√®s anonyme
-- Si vous pr√©f√©rez garder RLS activ√©, d√©commentez les lignes suivantes:

/*
-- Politiques pour la table vehicles
DROP POLICY IF EXISTS "Allow anonymous read on vehicles" ON vehicles;
CREATE POLICY "Allow anonymous read on vehicles" ON vehicles
  FOR SELECT TO anon
  USING (true);

DROP POLICY IF EXISTS "Allow anonymous write on vehicles" ON vehicles;
CREATE POLICY "Allow anonymous write on vehicles" ON vehicles
  FOR ALL TO anon
  USING (true)
  WITH CHECK (true);

-- Politiques pour la table reservations
DROP POLICY IF EXISTS "Allow anonymous read on reservations" ON reservations;
CREATE POLICY "Allow anonymous read on reservations" ON reservations
  FOR SELECT TO anon
  USING (true);

DROP POLICY IF EXISTS "Allow anonymous write on reservations" ON reservations;
CREATE POLICY "Allow anonymous write on reservations" ON reservations
  FOR ALL TO anon
  USING (true)
  WITH CHECK (true);

-- R√©activer RLS avec les nouvelles politiques
ALTER TABLE vehicles ENABLE ROW LEVEL SECURITY;
ALTER TABLE reservations ENABLE ROW LEVEL SECURITY;
*/

-- √âtape 2: V√©rifier les permissions
GRANT USAGE ON SCHEMA public TO anon;
GRANT SELECT, INSERT, UPDATE, DELETE ON vehicles TO anon;
GRANT SELECT, INSERT, UPDATE, DELETE ON reservations TO anon;

-- √âtape 3: Test de connexion
SELECT 'Test vehicles' as test, COUNT(*) as count FROM vehicles;
SELECT 'Test reservations' as test, COUNT(*) as count FROM reservations;

COMMIT;

SELECT 'üéâ Correction des permissions termin√©e - RLS d√©sactiv√© pour l\'acc√®s anonyme' as status; 